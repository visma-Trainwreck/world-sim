<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="e61c451f-b719-46b4-8591-b9f2dc22f69a" name="Default Changelist" comment="gitignore">
      <change afterPath="$PROJECT_DIR$/src/fsm/behavior.clj" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/fsm/fsm.clj" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/fsm/state.clj" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/fsm/utils.clj" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/world_sim/events_walkers.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/project.clj" beforeDir="false" afterPath="$PROJECT_DIR$/project.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/world_sim/actions_walkers.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/world_sim/actions_walkers.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/world_sim/mock_maps.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/world_sim/mock_maps.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/world_sim/producer.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/world_sim/producer.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/world_sim/simulate.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/world_sim/simulate.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/world_sim/tools.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/world_sim/tools.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/world_sim.iml" beforeDir="false" afterPath="$PROJECT_DIR$/world_sim.iml" afterDir="false" />
    </list>
    <ignored path="$PROJECT_DIR$/out/" />
    <ignored path="$PROJECT_DIR$/target/default/" />
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="DefaultGradleProjectSettings">
    <option name="isMigrated" value="true" />
  </component>
  <component name="FileEditorManager">
    <leaf SIDE_TABS_SIZE_LIMIT_KEY="300">
      <file pinned="false" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/src/fsm/behavior.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="102">
              <caret line="6" column="32" selection-start-line="6" selection-start-column="32" selection-end-line="6" selection-end-column="32" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/world_sim/simulate.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="323">
              <caret line="22" column="29" lean-forward="true" selection-start-line="22" selection-start-column="29" selection-end-line="22" selection-end-column="29" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/world_sim/init.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="510">
              <caret line="30" column="58" selection-start-line="30" selection-start-column="58" selection-end-line="30" selection-end-column="58" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/world_sim/mock_maps.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="325">
              <caret line="109" column="62" lean-forward="true" selection-start-line="109" selection-start-column="62" selection-end-line="109" selection-end-column="62" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/world_sim/events.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="136">
              <caret line="8" column="5" lean-forward="true" selection-start-line="8" selection-start-column="5" selection-end-line="8" selection-end-column="5" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/world_sim/tools.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="226">
              <caret line="28" column="77" selection-start-line="28" selection-start-column="77" selection-end-line="28" selection-end-column="77" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/world_sim/actions.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="357">
              <caret line="28" lean-forward="true" selection-start-line="28" selection-end-line="36" selection-end-column="36" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/world_sim/events_walkers.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="221">
              <caret line="13" column="9" lean-forward="true" selection-start-line="13" selection-start-column="9" selection-end-line="13" selection-end-column="9" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/world_sim/actions_walkers.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="119">
              <caret line="7" column="47" selection-start-line="7" selection-start-column="47" selection-end-line="7" selection-end-column="47" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/world_sim/producer.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="-32">
              <caret line="10" column="42" lean-forward="true" selection-start-line="10" selection-start-column="42" selection-end-line="10" selection-end-column="42" />
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Clojure Namespace" />
      </list>
    </option>
  </component>
  <component name="FindInProjectRecents">
    <findStrings>
      <find>println</find>
    </findStrings>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="implement-forgotten-stashes" />
      </map>
    </option>
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/src/world_sim/actions.clj" />
        <option value="$PROJECT_DIR$/src/world_sim/events.clj" />
        <option value="$PROJECT_DIR$/README.md" />
        <option value="$PROJECT_DIR$/src/world_sim/a_star.clj" />
        <option value="$PROJECT_DIR$/src/path_finder/tools.clj" />
        <option value="$PROJECT_DIR$/src/path_finder/a_star.clj" />
        <option value="$PROJECT_DIR$/src/world_sim/init.clj" />
        <option value="$PROJECT_DIR$/src/ui/screen.clj" />
        <option value="$PROJECT_DIR$/.gitignore" />
        <option value="$PROJECT_DIR$/src/fsm/utils.clj" />
        <option value="$PROJECT_DIR$/src/fsm/fsm.clj" />
        <option value="$PROJECT_DIR$/project.clj" />
        <option value="$PROJECT_DIR$/src/fsm/state.clj" />
        <option value="$PROJECT_DIR$/src/fsm/behavior.clj" />
        <option value="$PROJECT_DIR$/src/world_sim/simulate.clj" />
        <option value="$PROJECT_DIR$/src/world_sim/mock_maps.clj" />
        <option value="$PROJECT_DIR$/src/world_sim/actions_walkers.clj" />
        <option value="$PROJECT_DIR$/src/world_sim/producer.clj" />
        <option value="$PROJECT_DIR$/src/world_sim/tools.clj" />
        <option value="$PROJECT_DIR$/src/world_sim/events_walkers.clj" />
      </list>
    </option>
  </component>
  <component name="ProjectFrameBounds" extendedState="6">
    <option name="x" value="-10" />
    <option name="y" value="-10" />
    <option name="width" value="2580" />
    <option name="height" value="1410" />
  </component>
  <component name="ProjectView">
    <navigator proportions="" version="1">
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="ProjectPane">
        <subPane>
          <expand>
            <path>
              <item name="world_sim" type="b2602c69:ProjectViewProjectNode" />
              <item name="world_sim" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="world_sim" type="b2602c69:ProjectViewProjectNode" />
              <item name="world_sim" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="world_sim" type="b2602c69:ProjectViewProjectNode" />
              <item name="world_sim" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="fsm" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="world_sim" type="b2602c69:ProjectViewProjectNode" />
              <item name="world_sim" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="world_sim" type="462c0819:PsiDirectoryNode" />
            </path>
          </expand>
          <select />
        </subPane>
      </pane>
      <pane id="Scope" />
      <pane id="PackagesPane" />
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="aspect.path.notification.shown" value="true" />
    <property name="cursive.last.file.extension.C\:/Users/peter.l.rasmussen/Documents/project/world_sim/src" value="clj" />
    <property name="nodejs_interpreter_path.stuck_in_default_project" value="undefined stuck path" />
    <property name="nodejs_npm_path_reset_for_default_project" value="true" />
    <property name="restartRequiresConfirmation" value="false" />
    <property name="settings.editor.selected.configurable" value="sshConsole" />
  </component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\peter.l.rasmussen\Documents\project\world_sim\src\path_finder" />
    </key>
  </component>
  <component name="ReplState" timestamp="1568008877453">{:repl-history {:ide [], :local [{:command &quot;(def count-ab\n    [{::tk/name        :start\n      ::tk/transitions [{::tk/on \\a, ::tk/to :found-a}]}\n     {::tk/name        :found-a\n      ::tk/transitions [{::tk/on \\a ::tk/to :start}\n                        {::tk/on \\b ::tk/to :start ::tk/actions [(fn [m] (assoc-in m [::tk/process :count] (+ 1 (:count (::tk/process m)))))]}]}])&quot;, :offset 331, :ns &quot;fsm.state&quot;} {:command &quot;(def count-ab-process\n    {::tk/states  count-ab\n     ::tk/action! (fn [{::tk/keys [action] :as fsm}] (action fsm))\n     ::tk/state   :start\n     :count       3})&quot;, :offset 162, :ns &quot;fsm.state&quot;} {:command &quot;(-&gt; count-ab-process\n      (tk/apply-signal \\a)\n      (tk/apply-signal \\b))&quot;, :offset 75, :ns &quot;fsm.state&quot;} {:command &quot;(def test-me\n    [{::tk/name        :choice-handle\n      ::tk/transitions [{::tk/to      :sleep\n                         ::tk/on      \&quot;\&quot;\n                         ::tk/actions [#(update % :count inc)]}\n                        {::tk/to :eat\n                         ::tk/on \&quot;\&quot;}\n                        {::tk/to :travel\n                         ::tk/on \&quot;\&quot;}\n                        {::tk/to :play\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :sleep\n      ::tk/transitions [{::tk/to      :choice-handle\n                         ::tk/on      \&quot;\&quot;\n                         ::tk/actions [#(update % :count inc)]}]\n      ::tk/enter       {::tk/actions [(fn [m] (println \&quot;zzzzzzzzzzzzz\&quot;))]}}\n     {::tk/name        :eat\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :travel\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :play\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}])&quot;, :offset 1047, :ns &quot;fsm.state&quot;} {:command &quot;(def test-me\n    [{::tk/name        :choice-handle\n      ::tk/transitions [{::tk/to      :sleep\n                         ::tk/on      \&quot;\&quot;\n                         ::tk/actions []}\n                        {::tk/to :eat\n                         ::tk/on \&quot;\&quot;}\n                        {::tk/to :travel\n                         ::tk/on \&quot;\&quot;}\n                        {::tk/to :play\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :sleep\n      ::tk/transitions [{::tk/to      :choice-handle\n                         ::tk/on      \&quot;\&quot;\n                         ::tk/actions []}]\n      ::tk/enter       {::tk/actions [(fn [m] (println \&quot;zzzzzzzzzzzzz\&quot;))]}}\n     {::tk/name        :eat\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :travel\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :play\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}])&quot;, :offset 1003, :ns &quot;fsm.state&quot;} {:command &quot;(-&gt; ini-state\n    (tk/apply-signal \&quot;\&quot;)\n    (tk/apply-signal))&quot;, :offset 59, :ns &quot;fsm.state&quot;} {:command &quot;(def test-me\n    [{::tk/name        :choice-handle\n      ::tk/transitions [{::tk/to      :sleep\n                         ::tk/on      \&quot;\&quot;\n                         ::tk/actions []}\n                        {::tk/to :eat\n                         ::tk/on \&quot;\&quot;}\n                        {::tk/to :travel\n                         ::tk/on \&quot;\&quot;}\n                        {::tk/to :play\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :sleep\n      ::tk/transitions [{::tk/to      :choice-handle\n                         ::tk/on      \&quot;\&quot;\n                         ::tk/actions []}]\n      ::tk/enter       {::tk/actions [(fn [m] (println \&quot;zzzzzzzzzzzzz\&quot;) m)]}}\n     {::tk/name        :eat\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :travel\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :play\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}])&quot;, :offset 1005, :ns &quot;fsm.state&quot;} {:command &quot;(def ini-state\n    {::tk/states  test-me\n     ::tk/action! (fn [{::tk/keys [action] :as fsm}] (action fsm))\n     ::tk/state   :choice-handle\n     :count       0})&quot;, :offset 162, :ns &quot;fsm.state&quot;} {:command &quot;(def test-me\n    [{::tk/name        :choice-handle\n      ::tk/transitions [{::tk/to      :sleep\n                         ::tk/on      \&quot;\&quot;\n                         ::tk/actions []}\n                        {::tk/to :eat\n                         ::tk/on \&quot;\&quot;}\n                        {::tk/to :travel\n                         ::tk/on \&quot;\&quot;}\n                        {::tk/to :play\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :sleep\n      ::tk/transitions [{::tk/to      :choice-handle\n                         ::tk/on      \&quot;\&quot;\n                         ::tk/actions []}]\n      ::tk/enter       {::tk/actions [(fn [m] (println \&quot;zzzzzzzzzzzzz\&quot;) m)]}}\n     ::tk/leave        {::tk/actions [(fn [m] (println \&quot;waking up!\&quot;) m)]}\n     {::tk/name        :eat\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :travel\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :play\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}])&quot;, :offset 1079, :ns &quot;fsm.state&quot;} {:command &quot;(def test-me\n    [{::tk/name        :choice-handle\n      ::tk/transitions [{::tk/to      :sleep\n                         ::tk/on      \&quot;\&quot;\n                         ::tk/actions []}\n                        {::tk/to :eat\n                         ::tk/on \&quot;\&quot;}\n                        {::tk/to :travel\n                         ::tk/on \&quot;\&quot;}\n                        {::tk/to :play\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :sleep\n      ::tk/transitions [{::tk/to      :choice-handle\n                         ::tk/on      \&quot;\&quot;\n                         ::tk/actions []}]\n      ::tk/enter       {::tk/actions [(fn [m] (println \&quot;zzzzzzzzzzzzz\&quot;) m)]}\n      ::tk/leave       {::tk/actions [(fn [m] (println \&quot;waking up!\&quot;) m)]}}\n     {::tk/name        :eat\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :travel\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :play\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}])&quot;, :offset 1079, :ns &quot;fsm.state&quot;} {:command &quot;(def test-me\n    [{::tk/name        :choice-handle\n      ::tk/transitions [{::tk/to      :sleep\n                         ::tk/on      \&quot;\&quot;\n                         ::tk/actions []}\n                        {::tk/to :eat\n                         ::tk/on \&quot;\&quot;}\n                        {::tk/to :travel\n                         ::tk/on \&quot;\&quot;}\n                        {::tk/to :play\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :sleep\n      ::tk/transitions [{::tk/to      :choice-handle\n                         ::tk/on      \&quot;\&quot;\n                         ::tk/actions []}]\n      ::tk/enter       {::tk/actions [(fn [m] (println \&quot;zzzzzzzzzzzzz\&quot;) m)]}\n      ::tk/leave       {::tk/actions [(fn [m] (println \&quot;waking up!\&quot;)\n                                        (wake-up m))]}}\n     {::tk/name        :eat\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :travel\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :play\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}])&quot;, :offset 1129, :ns &quot;fsm.state&quot;} {:command &quot;(def test-me\n    [{::tk/name        :choice-handle\n      ::tk/transitions [{::tk/to      :sleep\n                         ::tk/on      \&quot;\&quot;\n                         ::tk/actions []}\n                        {::tk/to :eat\n                         ::tk/on \&quot;\&quot;}\n                        {::tk/to :travel\n                         ::tk/on \&quot;\&quot;}\n                        {::tk/to :play\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :sleep\n      ::tk/transitions [{::tk/to      :choice-handle\n                         ::tk/on      \&quot;\&quot;\n                         ::tk/actions []}]\n      ::tk/enter       {::tk/actions [(fn [m] (println \&quot;zzzzzzzzzzzzz\&quot;)\n                                        (lie-down m))]}\n      ::tk/leave       {::tk/actions [(fn [m] (println \&quot;waking up!\&quot;)\n                                        (wake-up m))]}}\n     {::tk/name        :eat\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :travel\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :play\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}])&quot;, :offset 1180, :ns &quot;fsm.state&quot;} {:command &quot;(def test-me\n    [{::tk/name        :choice-handle\n      ::tk/transitions [{::tk/to      :sleep\n                         ::tk/on      \&quot;\&quot;\n                         ::tk/actions []}\n                        {::tk/to :eat\n                         ::tk/on \&quot;\&quot;}\n                        {::tk/to :travel\n                         ::tk/on \&quot;\&quot;}\n                        {::tk/to :play\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :sleep\n      ::tk/transitions [{::tk/to      :choice-handle\n                         ::tk/on      \&quot;\&quot;\n                         ::tk/actions []}]\n      ::tk/enter       {::tk/guard [(fn [m] false)]\n                        ::tk/actions [(fn [m] (println \&quot;zzzzzzzzzzzzz\&quot;)\n                                        (lie-down m))]}\n      ::tk/leave       {::tk/actions [(fn [m] (println \&quot;waking up!\&quot;)\n                                        (wake-up m))]}}\n     {::tk/name        :eat\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :travel\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :play\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}])&quot;, :offset 1232, :ns &quot;fsm.state&quot;} {:command &quot;(def test-me\n    [{::tk/name        :choice-handle\n      ::tk/transitions [{::tk/to      :sleep\n                         ::tk/on      \&quot;\&quot;\n                         ::tk/actions []}\n                        {::tk/to :eat\n                         ::tk/on \&quot;\&quot;}\n                        {::tk/to :travel\n                         ::tk/on \&quot;\&quot;}\n                        {::tk/to :play\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :sleep\n      ::tk/transitions [{::tk/to      :choice-handle\n                         ::tk/on      \&quot;\&quot;\n                         ::tk/actions []}]\n      ::tk/enter       {::tk/guards [(fn [] false)]\n                        ::tk/actions [(fn [m] (println \&quot;zzzzzzzzzzzzz\&quot;)\n                                        (lie-down m))]}\n      ::tk/leave       {::tk/actions [(fn [m] (println \&quot;waking up!\&quot;)\n                                        (wake-up m))]}}\n     {::tk/name        :eat\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :travel\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :play\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}])&quot;, :offset 1232, :ns &quot;fsm.state&quot;} {:command &quot;(def test-me\n    [{::tk/name        :choice-handle\n      ::tk/transitions [{::tk/to      :sleep\n                         ::tk/on      \&quot;\&quot;\n                         ::tk/actions []}\n                        {::tk/to :eat\n                         ::tk/on \&quot;\&quot;}\n                        {::tk/to :travel\n                         ::tk/on \&quot;\&quot;}\n                        {::tk/to :play\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :sleep\n      ::tk/transitions [{::tk/to      :choice-handle\n                         ::tk/on      \&quot;\&quot;\n                         ::tk/actions []}]\n      ::tk/enter       {::tk/guards  [false]\n                        ::tk/actions [(fn [m] (println \&quot;zzzzzzzzzzzzz\&quot;)\n                                        (lie-down m))]}\n      ::tk/leave       {::tk/actions [(fn [m] (println \&quot;waking up!\&quot;)\n                                        (wake-up m))]}}\n     {::tk/name        :eat\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :travel\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :play\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}])&quot;, :offset 1225, :ns &quot;fsm.state&quot;} {:command &quot;(def test-me\n    [{::tk/name        :choice-handle\n      ::tk/transitions [{::tk/to      :sleep\n                         ::tk/on      \&quot;\&quot;\n                         ::tk/actions []}\n                        {::tk/to :eat\n                         ::tk/on \&quot;\&quot;}\n                        {::tk/to :travel\n                         ::tk/on \&quot;\&quot;}\n                        {::tk/to :play\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :sleep\n      ::tk/transitions [{::tk/to      :choice-handle\n                         ::tk/on      \&quot;\&quot;\n                         ::tk/actions []}]\n      ::tk/enter       {::tk/guard? [(fn [_] false)]\n                        ::tk/actions [(fn [m] (println \&quot;zzzzzzzzzzzzz\&quot;)\n                                        (lie-down m))]}\n      ::tk/leave       {::tk/actions [(fn [m] (println \&quot;waking up!\&quot;)\n                                        (wake-up m))]}}\n     {::tk/name        :eat\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :travel\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :play\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}])&quot;, :offset 1233, :ns &quot;fsm.state&quot;} {:command &quot;(def test-me\n    [{::tk/name        :choice-handle\n      ::tk/transitions [{::tk/to      :sleep\n                         ::tk/on      \&quot;\&quot;\n                         ::tk/actions []}\n                        {::tk/to :eat\n                         ::tk/on \&quot;\&quot;}\n                        {::tk/to :travel\n                         ::tk/on \&quot;\&quot;}\n                        {::tk/to :play\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :sleep\n      ::tk/transitions [{::tk/to      :choice-handle\n                         ::tk/on      \&quot;\&quot;\n                         ::tk/actions []}]\n      ::tk/enter       {::tk/guards [(fn [_] (println \&quot;wat\&quot;))]\n                        ::tk/actions [(fn [m] (println \&quot;zzzzzzzzzzzzz\&quot;)\n                                        (lie-down m))]}\n      ::tk/leave       {::tk/actions [(fn [m] (println \&quot;waking up!\&quot;)\n                                        (wake-up m))]}}\n     {::tk/name        :eat\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :travel\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :play\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}])&quot;, :offset 1243, :ns &quot;fsm.state&quot;} {:command &quot;(-&gt; ini-state\n    (tk/apply-signal))&quot;, :offset 36, :ns &quot;fsm.state&quot;} {:command &quot;(def test-me\n    [{::tk/name        :choice-handle\n      ::tk/transitions [{::tk/to      :sleep\n                         ::tk/on      \&quot;\&quot;\n                         ::tk/actions []}\n                        {::tk/to :eat\n                         ::tk/on \&quot;\&quot;}\n                        {::tk/to :travel\n                         ::tk/on \&quot;\&quot;}\n                        {::tk/to :play\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :sleep\n      ::tk/transitions [{::tk/to      :choice-handle\n                         ::tk/on      \&quot;\&quot;\n                         ::tk/actions []}]\n      ::tk/enter       {::tk/guards [false]\n                        ::tk/actions [(fn [m] (println \&quot;zzzzzzzzzzzzz\&quot;)\n                                        (lie-down m))]}\n      ::tk/leave       {::tk/actions [(fn [m] (println \&quot;waking up!\&quot;)\n                                        (wake-up m))]}}\n     {::tk/name        :eat\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :travel\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :play\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}])&quot;, :offset 1224, :ns &quot;fsm.state&quot;} {:command &quot;(def tester {:navn \&quot;peter\&quot; :age 3})&quot;, :offset 33, :ns &quot;fsm.state&quot;} {:command &quot;(assoc tester :age 2)&quot;, :offset 20, :ns &quot;fsm.state&quot;} {:command &quot;(def test-me\n    [{::tk/name        :choice-handle\n      ::tk/transitions [{::tk/to      :sleep\n                         ::tk/on      \&quot;\&quot;\n                         ::tk/actions []}\n                        {::tk/to :eat\n                         ::tk/on \&quot;\&quot;}\n                        {::tk/to :travel\n                         ::tk/on \&quot;\&quot;}\n                        {::tk/to :play\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :sleep\n      ::tk/transitions [{::tk/to      :choice-handle\n                         ::tk/on      \&quot;\&quot;\n                         ::tk/actions []}]\n      ::tk/enter       {::tk/guard [false]\n                        ::tk/actions [(fn [m] (println \&quot;zzzzzzzzzzzzz\&quot;)\n                                        (lie-down m))]}\n      ::tk/leave       {::tk/actions [(fn [m] (println \&quot;waking up!\&quot;)\n                                        (wake-up m))]}}\n     {::tk/name        :eat\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :travel\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :play\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}])&quot;, :offset 1223, :ns &quot;fsm.state&quot;} {:command &quot;(-&gt; ini-state\n    (tk/apply-guards \&quot;\&quot;))&quot;, :offset 34, :ns &quot;fsm.state&quot;} {:command &quot;(def test-me\n    [{::tk/name        :choice-handle\n      ::tk/transitions [{::tk/to      :sleep\n                         ::tk/on      \&quot;\&quot;\n                         ::tk/actions []}\n                        {::tk/to :eat\n                         ::tk/on \&quot;\&quot;}\n                        {::tk/to :travel\n                         ::tk/on \&quot;\&quot;}\n                        {::tk/to :play\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :sleep\n      ::tk/transitions [{::tk/to      :choice-handle\n                         ::tk/on      \&quot;\&quot;\n                         ::tk/actions []}]\n      ::tk/enter       {::tk/guard [(fn [_] false)]\n                        ::tk/actions [(fn [m] (println \&quot;zzzzzzzzzzzzz\&quot;)\n                                        (lie-down m))]}\n      ::tk/leave       {::tk/actions [(fn [m] (println \&quot;waking up!\&quot;)\n                                        (wake-up m))]}}\n     {::tk/name        :eat\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :travel\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :play\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}])&quot;, :offset 1232, :ns &quot;fsm.state&quot;} {:command &quot;(def test-me\n    [{::tk/name        :choice-handle\n      ::tk/transitions [{::tk/to      :sleep\n                         ::tk/on      \&quot;\&quot;\n                         ::tk/actions []}\n                        {::tk/to :eat\n                         ::tk/on \&quot;\&quot;}\n                        {::tk/to :travel\n                         ::tk/on \&quot;\&quot;}\n                        {::tk/to :play\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :sleep\n      ::tk/transitions [{::tk/to      :choice-handle\n                         ::tk/on      \&quot;\&quot;\n                         ::tk/actions []}]\n      ::tk/enter       {::tk/guards [(fn [m] m)]\n                        ::tk/actions [(fn [m] (println \&quot;zzzzzzzzzzzzz\&quot;)\n                                        (lie-down m))]}\n      ::tk/leave       {::tk/actions [(fn [m] (println \&quot;waking up!\&quot;)\n                                        (wake-up m))]}}\n     {::tk/name        :eat\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :travel\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :play\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}])&quot;, :offset 1229, :ns &quot;fsm.state&quot;} {:command &quot;(def ini-state\n    {::tk/states  test-me\n     ::tk/action! (fn [{::tk/keys [action] :as fsm}] (action fsm))\n     ::tk/state   :choice-handle\n     :count       0\n     :current-path nil})&quot;, :offset 185, :ns &quot;fsm.state&quot;} {:command &quot;(def ini-state\n    {::tk/states  test-me\n     ::tk/action! (fn [{::tk/keys [action] :as fsm}] (action fsm))\n     ::tk/guard? (fn [{::tk/keys [signal guard]}] true)\n     ::tk/state   :choice-handle\n     :count       0\n     :current-path nil})&quot;, :offset 241, :ns &quot;fsm.state&quot;} {:command &quot;(def test-me\n    [{::tk/name        :choice-handle\n      ::tk/transitions [{::tk/to      :sleep\n                         ::tk/on      \&quot;\&quot;\n                         ::tk/actions []}\n                        {::tk/to :eat\n                         ::tk/on \&quot;\&quot;}\n                        {::tk/to :travel\n                         ::tk/on \&quot;\&quot;}\n                        {::tk/to :play\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :sleep\n      ::tk/transitions [{::tk/to      :choice-handle\n                         ::tk/on      \&quot;\&quot;\n                         ::tk/actions []}]\n      ::tk/enter       {::tk/guards [(fn [m] false)]\n                        ::tk/actions [(fn [m] (println \&quot;zzzzzzzzzzzzz\&quot;)\n                                        (lie-down m))]}\n      ::tk/leave       {::tk/actions [(fn [m] (println \&quot;waking up!\&quot;)\n                                        (wake-up m))]}}\n     {::tk/name        :eat\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :travel\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :play\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}])&quot;, :offset 1233, :ns &quot;fsm.state&quot;} {:command &quot;(def test-me\n    [{::tk/name        :choice-handle\n      ::tk/transitions [{::tk/to      :sleep\n                         ::tk/on      \&quot;\&quot;\n                         ::tk/actions []}\n                        {::tk/to :eat\n                         ::tk/on \&quot;\&quot;}\n                        {::tk/to :travel\n                         ::tk/on \&quot;\&quot;}\n                        {::tk/to :play\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :sleep\n      ::tk/transitions [{::tk/to      :choice-handle\n                         ::tk/on      \&quot;\&quot;\n                         ::tk/actions []}]\n      ::tk/enter       {::tk/guards []\n                        ::tk/actions [(fn [m] (println \&quot;zzzzzzzzzzzzz\&quot;)\n                                        (lie-down m))]}\n      ::tk/leave       {::tk/actions [(fn [m] (println \&quot;waking up!\&quot;)\n                                        (wake-up m))]}}\n     {::tk/name        :eat\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :travel\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :play\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}])&quot;, :offset 1219, :ns &quot;fsm.state&quot;} {:command &quot;(def ini-state\n    {::tk/states  test-me\n     ::tk/action! (fn [{::tk/keys [action] :as fsm}] (action fsm))\n     ::tk/guard? (fn [{::tk/keys [signal guard]}] false)\n     ::tk/state   :choice-handle\n     :count       0\n     :current-path nil})&quot;, :offset 242, :ns &quot;fsm.state&quot;} {:command &quot;(def test-me\n    [{::tk/name        :choice-handle\n      ::tk/transitions [{::tk/to      :sleep\n                         ::tk/on      \&quot;\&quot;\n                         ::tk/actions []}\n                        {::tk/to :eat\n                         ::tk/on \&quot;\&quot;}\n                        {::tk/to :travel\n                         ::tk/on \&quot;\&quot;}\n                        {::tk/to :play\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :sleep\n      ::tk/transitions [{::tk/to      :choice-handle\n                         ::tk/on      \&quot;\&quot;\n                         ::tk/actions []}]\n      ::tk/enter       {::tk/guards [(fn [ctx] (if (get-in ctx [::tk/process :tired?] true)))]\n                        ::tk/actions [(fn [m] (println \&quot;zzzzzzzzzzzzz\&quot;)\n                                        (lie-down m))]}\n      ::tk/leave       {::tk/actions [(fn [m] (println \&quot;waking up!\&quot;)\n                                        (wake-up m))]}}\n     {::tk/name        :eat\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :travel\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :play\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}])&quot;, :offset 1275, :ns &quot;fsm.state&quot;} {:command &quot;(def ini-state\n    {::tk/states  test-me\n     ::tk/action! (fn [{::tk/keys [action] :as fsm}] (action fsm))\n     ::tk/guard? (fn [{::tk/keys [signal guard]}] false)\n     ::tk/state   :choice-handle\n     :count       0\n     :current-path nil\n     :tired? true})&quot;, :offset 260, :ns &quot;fsm.state&quot;} {:command &quot;(def ini-state\n    {::tk/states  test-me\n     ::tk/action! (fn [{::tk/keys [action] :as fsm}] (action fsm))\n     ::tk/guard? (fn [{::tk/keys [signal guard]}] guard)\n     ::tk/state   :choice-handle\n     :count       0\n     :current-path nil\n     :tired? true})&quot;, :offset 260, :ns &quot;fsm.state&quot;} {:command &quot;(def ini-state\n    {::tk/states  test-me\n     ::tk/action! (fn [{::tk/keys [action] :as fsm}] (action fsm))\n     ::tk/guard? (fn [{::tk/keys [signal guard]}] guard)\n     ::tk/state   :choice-handle\n     :count       0\n     :current-path nil\n     :tired? false})&quot;, :offset 261, :ns &quot;fsm.state&quot;} {:command &quot;(def ini-state\n    {::tk/states  test-me\n     ::tk/action! (fn [{::tk/keys [action] :as fsm}] (action fsm))\n     ::tk/guard? (fn [{::tk/keys [signal guard]}] (println guard) guard)\n     ::tk/state   :choice-handle\n     :count       0\n     :current-path nil\n     :tired? false})&quot;, :offset 277, :ns &quot;fsm.state&quot;} {:command &quot;tester&quot;, :offset 6, :ns &quot;fsm.state&quot;} {:command &quot;(tester)&quot;, :offset 7, :ns &quot;fsm.state&quot;} {:command &quot;(tester true)&quot;, :offset 12, :ns &quot;fsm.state&quot;} {:command &quot;(tester false)&quot;, :offset 13, :ns &quot;fsm.state&quot;} {:command &quot;(def ini-state\n    {::tk/states  test-me\n     ::tk/action! (fn [{::tk/keys [action] :as fsm}] (action fsm))\n     ::tk/guard? (fn [{::tk/keys [signal guard]}] (def tester guard) guard)\n     ::tk/state   :choice-handle\n     :count       0\n     :current-path nil\n     :tired? false})&quot;, :offset 280, :ns &quot;fsm.state&quot;} {:command &quot;(tester nil)&quot;, :offset 11, :ns &quot;fsm.state&quot;} {:command &quot;(tester \&quot;\&quot;)&quot;, :offset 9, :ns &quot;fsm.state&quot;} {:command &quot;(def ini-state\n    {::tk/states   test-me\n     ::tk/action!  (fn [{::tk/keys [action] :as fsm}] (action fsm))\n     ::tk/guard?   (fn [{::tk/keys [signal guard]}] (guard signal))\n     ::tk/state    :choice-handle\n     :count        0\n     :current-path nil\n     :tired?       true})&quot;, :offset 281, :ns &quot;fsm.state&quot;} {:command &quot;(def ini-state\n    {::tk/states   test-me\n     ::tk/action!  (fn [{::tk/keys [action] :as fsm}] (action fsm))\n     ::tk/guard?   (fn [{::tk/keys [signal guard]}] (guard signal))\n     ::tk/state    :choice-handle\n     :count        0\n     :current-path nil\n     :tired?       false})&quot;, :offset 282, :ns &quot;fsm.state&quot;} {:command &quot;(def ini-state\n    {::tk/states   test-me\n     ::tk/action!  (fn [{::tk/keys [action] :as fsm}] (action fsm))\n     ::tk/guard?   (fn [{::tk/keys [signal guard] :as fsm}] (guard fsm))\n     ::tk/state    :choice-handle\n     :count        0\n     :current-path nil\n     :tired?       false})&quot;, :offset 287, :ns &quot;fsm.state&quot;} {:command &quot;(def test-me\n    [{::tk/name        :choice-handle\n      ::tk/transitions [{::tk/to      :sleep\n                         ::tk/on      \&quot;\&quot;\n                         ::tk/actions []}\n                        {::tk/to :eat\n                         ::tk/on \&quot;\&quot;}\n                        {::tk/to :travel\n                         ::tk/on \&quot;\&quot;}\n                        {::tk/to :play\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :sleep\n      ::tk/transitions [{::tk/to      :choice-handle\n                         ::tk/on      \&quot;\&quot;\n                         ::tk/actions []}]\n      ::tk/enter       {::tk/guards [(fn [ctx] (if (get-in ctx [::tk/process :tired?])\n                                                 false\n                                                 true))]\n                        ::tk/actions [(fn [m] (println \&quot;zzzzzzzzzzzzz\&quot;)\n                                        (lie-down m))]}\n      ::tk/leave       {::tk/actions [(fn [m] (println \&quot;waking up!\&quot;)\n                                        (wake-up m))]}}\n     {::tk/name        :eat\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :travel\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :play\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}])&quot;, :offset 1379, :ns &quot;fsm.state&quot;} {:command &quot;(defn wake-up\n  [ctx]\n  (assoc-in ctx [::tk/process :current-path] \&quot;stand-up\&quot;))&quot;, :offset 79, :ns &quot;fsm.state&quot;} {:command &quot;(defn lie-down\n  [ctx]\n  (assoc-in ctx [::tk/process :current-path] \&quot;lie down\&quot;))&quot;, :offset 80, :ns &quot;fsm.state&quot;} {:command &quot;(def test-me\n    [{::tk/name        :choice-handle\n      ::tk/transitions [{::tk/to      :sleep\n                         ::tk/on      \&quot;\&quot;\n                         ::tk/actions []}\n                        {::tk/to :eat\n                         ::tk/on \&quot;\&quot;}\n                        {::tk/to :travel\n                         ::tk/on \&quot;\&quot;}\n                        {::tk/to :play\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :sleep\n      ::tk/transitions [{::tk/to      :choice-handle\n                         ::tk/on      \&quot;\&quot;\n                         ::tk/actions []}]\n      ::tk/enter       {::tk/guards [(fn [ctx] (if (get-in ctx [::tk/process :tired?])\n                                                 true\n                                                 false))]\n                        ::tk/actions [(fn [m] (println \&quot;zzzzzzzzzzzzz\&quot;)\n                                        (lie-down m))]}\n      ::tk/leave       {::tk/actions [(fn [m] (println \&quot;waking up!\&quot;)\n                                        (wake-up m))]}}\n     {::tk/name        :eat\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :travel\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :play\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}])&quot;, :offset 1379, :ns &quot;fsm.state&quot;} {:command &quot;(tilakone.util/try-guard)&quot;, :offset 25, :ns &quot;fsm.state&quot;} {:command &quot;(def ini-state\n    {::tk/states   test-me\n     ::tk/action!  (fn [{::tk/keys [action] :as fsm}] (action fsm))\n     ::tk/guard?   (fn [{::tk/keys [signal guard] :as fsm}] (println \&quot;weee\&quot;) (guard fsm))\n     ::tk/state    :choice-handle\n     :count        0\n     :current-path nil\n     :tired?       true})&quot;, :offset 303, :ns &quot;fsm.state&quot;} {:command &quot;(def ini-state\n    {::tk/states   test-me\n     ::tk/action!  (fn [{::tk/keys [action] :as fsm}] (action fsm))\n     ::tk/guard?   (fn [{::tk/keys [signal guard] :as fsm}] (println \&quot;weee\&quot;) (guard fsm))\n     ::tk/state    :choice-handle\n     :count        0\n     :current-path nil\n     :tired?       false})&quot;, :offset 304, :ns &quot;fsm.state&quot;} {:command &quot;(def test-me\n    [{::tk/name        :choice-handle\n      ::tk/transitions [{::tk/to      :sleep\n                         ::tk/on      \&quot;\&quot;\n                         ::tk/actions []}\n                        {::tk/to :eat\n                         ::tk/on \&quot;\&quot;}\n                        {::tk/to :travel\n                         ::tk/on \&quot;\&quot;}\n                        {::tk/to :play\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :sleep\n      ::tk/transitions [{::tk/to      :choice-handle\n                         ::tk/on      \&quot;\&quot;\n                         ::tk/actions []}]\n      ::tk/enter       {::tk/guards [(fn [ctx] (if (get-in ctx [::tk/process :stats :tired?])\n                                                 true\n                                                 false))]\n                        ::tk/actions [(fn [m] (println \&quot;zzzzzzzzzzzzz\&quot;)\n                                        (lie-down m))]}\n      ::tk/leave       {::tk/actions [(fn [m] (println \&quot;waking up!\&quot;)\n                                        (wake-up m))]}}\n     {::tk/name        :eat\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :travel\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :play\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}])&quot;, :offset 1386, :ns &quot;fsm.state&quot;} {:command &quot;(def ini-state\n    {::tk/states  test-me\n     ::tk/action! (fn [{::tk/keys [action] :as fsm}] (action fsm))\n     ::tk/guard?  (fn [{::tk/keys [signal guard] :as fsm}] (println \&quot;weee\&quot;) (guard fsm))\n     ::tk/state   :choice-handle\n     :stats       {:count        0\n                   :current-path nil\n                   :tired?       false}})&quot;, :offset 343, :ns &quot;fsm.state&quot;} {:command &quot;(-&gt; ini-state\n    (tk/apply-signal \&quot;\&quot;))&quot;, :offset 36, :ns &quot;fsm.state&quot;} {:command &quot;(defn wake-up\n  [ctx]\n  (assoc-in ctx [::tk/process :stats :current-path] \&quot;stand-up\&quot;))&quot;, :offset 86, :ns &quot;fsm.state&quot;} {:command &quot;(defn lie-down\n  [ctx]\n  (assoc-in ctx [::tk/process :stats :current-path] \&quot;lie down\&quot;))&quot;, :offset 87, :ns &quot;fsm.state&quot;} {:command &quot;(def test-me\n    [{::tk/name        :choice-handle\n      ::tk/transitions [{::tk/to      :sleep\n                         ::tk/on      \&quot;\&quot;\n                         ::tk/actions []}\n                        {::tk/to :eat\n                         ::tk/on \&quot;\&quot;}\n                        {::tk/to :travel\n                         ::tk/on \&quot;\&quot;}\n                        {::tk/to :play\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :sleep\n      ::tk/transitions [{::tk/to      :choice-handle\n                         ::tk/on      \&quot;\&quot;\n                         ::tk/actions []}]\n      ::tk/enter       {::tk/guards [(fn [ctx] (if (get-in ctx [::tk/process :stats :tired?])\n                                                 true\n                                                 false))]\n                        ::tk/actions [(fn [m] (println \&quot;zzzzzzzzzzzzz\&quot;)\n                                        (lie-down m))]}\n      ::tk/leave       {::tk/actions [(fn [m] (println \&quot;waking up!\&quot;)\n                                        (wake-up m))]}}\n     {::tk/name        :eat\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :travel\n      ::tk/stay         {::guards  []\n                         ::actions []}\n      ::tk/leave        {::guards  [(fn [_] false)]\n                         ::actions [(fn [_] (println \&quot;nope !\&quot;))]}\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :play\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}])&quot;, :offset 1581, :ns &quot;fsm.state&quot;} {:command &quot;(def test-me\n    [{::tk/name        :choice-handle\n      ::tk/transitions [{::tk/to      :sleep\n                         ::tk/on      \&quot;\&quot;\n                         ::tk/actions []}\n                        {::tk/to :eat\n                         ::tk/on \&quot;\&quot;}\n                        {::tk/to :travel\n                         ::tk/on \&quot;t\&quot;}\n                        {::tk/to :play\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :sleep\n      ::tk/transitions [{::tk/to      :choice-handle\n                         ::tk/on      \&quot;\&quot;\n                         ::tk/actions []}]\n      ::tk/enter       {::tk/guards [(fn [ctx] (if (get-in ctx [::tk/process :stats :tired?])\n                                                 true\n                                                 false))]\n                        ::tk/actions [(fn [m] (println \&quot;zzzzzzzzzzzzz\&quot;)\n                                        (lie-down m))]}\n      ::tk/leave       {::tk/actions [(fn [m] (println \&quot;waking up!\&quot;)\n                                        (wake-up m))]}}\n     {::tk/name        :eat\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :travel\n      ::tk/stay         {::guards  []\n                         ::actions []}\n      ::tk/leave        {::guards  [(fn [_] false)]\n                         ::actions [(fn [_] (println \&quot;nope !\&quot;))]}\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :play\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}])&quot;, :offset 1582, :ns &quot;fsm.state&quot;} {:command &quot;(-&gt; test-me\n    (tk/apply-signal \&quot;t\&quot;))&quot;, :offset 11, :ns &quot;fsm.state&quot;} {:command &quot;(-&gt; test-me\n    (tk/apply-signal \&quot;\&quot;))&quot;, :offset 34, :ns &quot;fsm.state&quot;} {:command &quot;(def ini-state\n    {::tk/states  test-me\n     ::tk/action! (fn [{::tk/keys [action] :as fsm}] (action fsm))\n     ::tk/guard?  (fn [{::tk/keys [signal guard] :as fsm}] (println \&quot;weee\&quot;) (guard fsm))\n     ::tk/state   :choice-handle\n     :stats       {:count        0\n                   :current-path nil\n                   :tired?       true}})&quot;, :offset 342, :ns &quot;fsm.state&quot;} {:command &quot;(-&gt; ini-state\n    (tk/apply-signal \&quot;t\&quot;))&quot;, :offset 13, :ns &quot;fsm.state&quot;} {:command &quot;(def test-me\n    [{::tk/name        :choice-handle\n      ::tk/transitions [{::tk/to      :sleep\n                         ::tk/on      \&quot;\&quot;\n                         ::tk/actions []}\n                        {::tk/to :eat\n                         ::tk/on \&quot;\&quot;}\n                        {::tk/to :travel\n                         ::tk/on \&quot;t\&quot;}\n                        {::tk/to :play\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :sleep\n      ::tk/transitions [{::tk/to      :choice-handle\n                         ::tk/on      \&quot;\&quot;\n                         ::tk/actions []}]\n      ::tk/enter       {::tk/guards [(fn [ctx] (if (get-in ctx [::tk/process :stats :tired?])\n                                                 true\n                                                 false))]\n                        ::tk/actions [(fn [m] (println \&quot;zzzzzzzzzzzzz\&quot;)\n                                        (lie-down m))]}\n      ::tk/leave       {::tk/actions [(fn [m] (println \&quot;waking up!\&quot;)\n                                        (wake-up m))]}}\n     {::tk/name        :eat\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :travel\n      ::tk/stay         {::guards  []\n                         ::actions []}\n      ::tk/leave        {::guards  [(fn [_] true)]\n                         ::actions [(fn [_] (println \&quot;nope !\&quot;))]}\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}\n     {::tk/name        :play\n      ::tk/transitions [{::tk/to :choice-handle\n                         ::tk/on \&quot;\&quot;}]}])&quot;, :offset 1581, :ns &quot;fsm.state&quot;} {:command &quot;(def test-me\n  [{::tk/name        :choice-handle\n    ::tk/transitions [{::tk/to      :sleep\n                       ::tk/on      \&quot;\&quot;\n                       ::tk/actions []}\n                      {::tk/to :eat\n                       ::tk/on \&quot;\&quot;}\n                      {::tk/to :travel\n                       ::tk/on \&quot;t\&quot;}\n                      {::tk/to :play\n                       ::tk/on \&quot;\&quot;}]}\n   {::tk/name        :sleep\n    ::tk/transitions [{::tk/to      :choice-handle\n                       ::tk/on      \&quot;\&quot;\n                       ::tk/actions []}]\n    ::tk/enter       {::tk/guards [(fn [ctx] (if (get-in ctx [::tk/process :stats :tired?])\n                                               true\n                                               false))]\n                      ::tk/actions [(fn [m] (println \&quot;zzzzzzzzzzzzz\&quot;)\n                                      (lie-down m))]}\n    ::tk/leave       {::tk/actions [(fn [m] (println \&quot;waking up!\&quot;)\n                                      (wake-up m))]}}\n   {::tk/name        :eat\n    ::tk/transitions [{::tk/to :choice-handle\n                       ::tk/on \&quot;\&quot;}]}\n   {::tk/name        :travel\n    ::tk/stay         {::tk/actions [(fn [_] (println \&quot;we stayed!\&quot;))]}\n    ::tk/leave        {::tk/guards  [(fn [_] true)]\n                       ::actions [(fn [_] (println \&quot;nope !\&quot;))]}\n    ::tk/transitions [{::tk/to :choice-handle\n                       ::tk/on \&quot;\&quot;}]}\n   {::tk/name        :play\n    ::tk/transitions [{::tk/to :choice-handle\n                       ::tk/on \&quot;\&quot;}]}])&quot;, :offset 1514, :ns &quot;fsm.state&quot;} {:command &quot;(def test-me\n  [{::tk/name        :choice-handle\n    ::tk/transitions [{::tk/to      :sleep\n                       ::tk/on      \&quot;\&quot;\n                       ::tk/actions []}\n                      {::tk/to :eat\n                       ::tk/on \&quot;\&quot;}\n                      {::tk/to :travel\n                       ::tk/on \&quot;t\&quot;}\n                      {::tk/to :play\n                       ::tk/on \&quot;\&quot;}]}\n   {::tk/name        :sleep\n    ::tk/transitions [{::tk/to      :choice-handle\n                       ::tk/on      \&quot;\&quot;\n                       ::tk/actions []}]\n    ::tk/enter       {::tk/guards [(fn [ctx] (if (get-in ctx [::tk/process :stats :tired?])\n                                               true\n                                               false))]\n                      ::tk/actions [(fn [m] (println \&quot;zzzzzzzzzzzzz\&quot;)\n                                      (lie-down m))]}\n    ::tk/leave       {::tk/actions [(fn [m] (println \&quot;waking up!\&quot;)\n                                      (wake-up m))]}}\n   {::tk/name        :eat\n    ::tk/transitions [{::tk/to :choice-handle\n                       ::tk/on \&quot;\&quot;}]}\n   {::tk/name        :travel\n    ::tk/stay         {::tk/actions [(fn [_] (println \&quot;we stayed!\&quot;))]}\n    ::tk/leave        {::tk/guards  [(fn [_] false)]\n                       ::actions [(fn [_] (println \&quot;nope !\&quot;))]}\n    ::tk/transitions [{::tk/to :choice-handle\n                       ::tk/on \&quot;\&quot;}]}\n   {::tk/name        :play\n    ::tk/transitions [{::tk/to :choice-handle\n                       ::tk/on \&quot;\&quot;}]}])&quot;, :offset 1515, :ns &quot;fsm.state&quot;} {:command &quot;(def test-me\n  [{::tk/name        :choice-handle\n    ::tk/transitions [{::tk/to      :sleep\n                       ::tk/on      \&quot;\&quot;\n                       ::tk/actions []}\n                      {::tk/to :eat\n                       ::tk/on \&quot;\&quot;}\n                      {::tk/to :travel\n                       ::tk/on \&quot;t\&quot;}\n                      {::tk/to :play\n                       ::tk/on \&quot;\&quot;}]}\n   {::tk/name        :sleep\n    ::tk/transitions [{::tk/to      :choice-handle\n                       ::tk/on      \&quot;\&quot;\n                       ::tk/actions []}]\n    ::tk/enter       {::tk/guards [(fn [ctx] (if (get-in ctx [::tk/process :stats :tired?])\n                                               true\n                                               false))]\n                      ::tk/actions [(fn [m] (println \&quot;zzzzzzzzzzzzz\&quot;)\n                                      (lie-down m))]}\n    ::tk/leave       {::tk/actions [(fn [m] (println \&quot;waking up!\&quot;)\n                                      (wake-up m))]}}\n   {::tk/name        :eat\n    ::tk/transitions [{::tk/to :choice-handle\n                       ::tk/on \&quot;\&quot;}]}\n   {::tk/name        :travel\n    ::tk/stay         {::tk/guards [(fn [_] true)]\n                       ::tk/actions [(fn [_] (println \&quot;we stayed!\&quot;))]}\n    ::tk/leave        {::tk/guards  [(fn [_] false)]\n                       ::actions [(fn [_] (println \&quot;nope !\&quot;))]}\n    ::tk/transitions [{::tk/to :choice-handle\n                       ::tk/on \&quot;\&quot;}]}\n   {::tk/name        :play\n    ::tk/transitions [{::tk/to :choice-handle\n                       ::tk/on \&quot;\&quot;}]}])&quot;, :offset 1566, :ns &quot;fsm.state&quot;} {:command &quot;(def test-me\n  [{::tk/name        :choice-handle\n    ::tk/transitions [{::tk/to      :sleep\n                       ::tk/on      \&quot;\&quot;\n                       ::tk/actions []}\n                      {::tk/to :eat\n                       ::tk/on \&quot;\&quot;}\n                      {::tk/to :travel\n                       ::tk/on \&quot;t\&quot;}\n                      {::tk/to :play\n                       ::tk/on \&quot;\&quot;}]}\n   {::tk/name        :sleep\n    ::tk/transitions [{::tk/to      :choice-handle\n                       ::tk/on      \&quot;\&quot;\n                       ::tk/actions []}]\n    ::tk/enter       {::tk/guards [(fn [ctx] (if (get-in ctx [::tk/process :stats :tired?])\n                                               true\n                                               false))]\n                      ::tk/actions [(fn [m] (println \&quot;zzzzzzzzzzzzz\&quot;)\n                                      (lie-down m))]}\n    ::tk/leave       {::tk/actions [(fn [m] (println \&quot;waking up!\&quot;)\n                                      (wake-up m))]}}\n   {::tk/name        :eat\n    ::tk/transitions [{::tk/to :choice-handle\n                       ::tk/on \&quot;\&quot;}]}\n   {::tk/name        :travel\n    ::tk/stay         {::tk/guards [(fn [_] false)]\n                       ::tk/actions [(fn [_] (println \&quot;we stayed!\&quot;))]}\n    ::tk/leave        {::tk/guards  [(fn [_] false)]\n                       ::actions [(fn [_] (println \&quot;nope !\&quot;))]}\n    ::tk/transitions [{::tk/to :choice-handle\n                       ::tk/on \&quot;\&quot;}]}\n   {::tk/name        :play\n    ::tk/transitions [{::tk/to :choice-handle\n                       ::tk/on \&quot;\&quot;}]}])&quot;, :offset 1567, :ns &quot;fsm.state&quot;} {:command &quot;(def ini-state\n  {::tk/states  test-me\n   ::tk/action! (fn [{::tk/keys [action] :as fsm}] (action fsm))\n   ::tk/guard?  (fn [{::tk/keys [signal guard] :as fsm}] (println \&quot;weee\&quot;) (guard fsm))\n   ::tk/state   :choice-handle\n   :stats       {:count        0\n                 :current-path nil\n                 :tired?       false}})&quot;, :offset 329, :ns &quot;fsm.state&quot;} {:command &quot;(-&gt; ini-state\n    (tk/apply-signal \&quot;\&quot;)\n    (tk/apply-signal \&quot;t\&quot;))&quot;, :offset 62, :ns &quot;fsm.state&quot;} {:command &quot;(-&gt; ini-state\n    (tk/apply-signal \&quot;\&quot;)\n    (tk/apply-signal \&quot;s\&quot;))&quot;, :offset 62, :ns &quot;fsm.state&quot;} {:command &quot;(tk/apply-guards \&quot;t\&quot;)&quot;, :offset 0} {:command &quot;(-&gt; ini-state\n    (tk/apply-guards \&quot;t\&quot;)\n    (tk/apply-guards \&quot;\&quot;))&quot;, :offset 54, :ns &quot;fsm.state&quot;} {:command &quot;d&quot;, :offset 1, :ns &quot;fsm.state&quot;} {:command &quot;(-&gt; ini-state\n    (tk/apply-signal \&quot;t\&quot;)\n    (tk/apply-signal \&quot;t\&quot;))&quot;, :offset 63, :ns &quot;fsm.state&quot;} {:command &quot;(tk/apply-guards ini-state \&quot;\&quot;)&quot;, :offset 28, :ns &quot;fsm.state&quot;} {:command &quot;(tk/apply-guards ini-state \&quot;t\&quot;)&quot;, :offset 29, :ns &quot;fsm.state&quot;} {:command &quot;(tk/apply-guards tester \&quot;\&quot;)&quot;, :offset 25, :ns &quot;fsm.state&quot;} {:command &quot;(def test-me\n  [{::tk/name        :choice-handle\n    ::tk/transitions [{::tk/to      :sleep\n                       ::tk/on      \&quot;\&quot;\n                       ::tk/actions []}\n                      {::tk/to :eat\n                       ::tk/on \&quot;\&quot;}\n                      {::tk/to :travel\n                       ::tk/on \&quot;t\&quot;}\n                      {::tk/to :play\n                       ::tk/on \&quot;\&quot;}]}\n   {::tk/name        :sleep\n    ::tk/transitions [{::tk/to      :choice-handle\n                       ::tk/on      \&quot;\&quot;\n                       ::tk/actions []}]\n    ::tk/enter       {::tk/guards [(fn [ctx] (if (get-in ctx [::tk/process :stats :tired?])\n                                               true\n                                               false))]\n                      ::tk/actions [(fn [m] (println \&quot;zzzzzzzzzzzzz\&quot;)\n                                      (lie-down m))]}\n    ::tk/leave       {::tk/actions [(fn [m] (println \&quot;waking up!\&quot;)\n                                      (wake-up m))]}}\n   {::tk/name        :eat\n    ::tk/transitions [{::tk/to :choice-handle\n                       ::tk/on \&quot;\&quot;}]}\n   {::tk/name        :travel\n    ::tk/stay         {::tk/guards []\n                       ::tk/actions [(fn [_] (println \&quot;we stayed!\&quot;))]}\n\n    ::tk/leave        {::tk/guards  [(fn [_] true)]\n                       ::tk/actions [(fn [_] (println \&quot;nope !\&quot;))]}\n\n    ::tk/transitions [{::tk/to :choice-handle\n                       ::tk/on \&quot;\&quot;}]}\n\n   {::tk/name        :play\n    ::tk/transitions [{::tk/to :choice-handle\n                       ::tk/on \&quot;\&quot;}]}])&quot;, :offset 1558, :ns &quot;fsm.state&quot;} {:command &quot;(def tester (tk/apply-signal ini-state \&quot;t\&quot;))&quot;, :offset 41, :ns &quot;fsm.state&quot;} {:command &quot;(tk/apply-guards tester \&quot;t\&quot;)&quot;, :offset 26, :ns &quot;fsm.state&quot;} {:command &quot;(-&gt; ini-state\n    (tk/apply-signal \&quot;t\&quot;)\n    (tk/apply-signal ))&quot;, :offset 61, :ns &quot;fsm.state&quot;} {:command &quot;(def test-me\n  [{::tk/name        :choice-handle\n    ::tk/transitions [{::tk/to      :sleep\n                       ::tk/on      \&quot;\&quot;\n                       ::tk/actions []}\n                      {::tk/to :eat\n                       ::tk/on \&quot;\&quot;}\n                      {::tk/to :test\n                       ::tk/on \&quot;t\&quot;}\n                      {::tk/to :play\n                       ::tk/on \&quot;\&quot;}]}\n   {::tk/name        :sleep\n    ::tk/transitions [{::tk/to      :choice-handle\n                       ::tk/on      \&quot;\&quot;\n                       ::tk/actions []}]\n    ::tk/enter       {::tk/guards  [(fn [ctx] (if (get-in ctx [::tk/process :stats :tired?])\n                                                true\n                                                false))]\n                      ::tk/actions [(fn [m] (println \&quot;zzzzzzzzzzzzz\&quot;)\n                                      (lie-down m))]}\n    ::tk/leave       {::tk/actions [(fn [m] (println \&quot;waking up!\&quot;)\n                                      (wake-up m))]}}\n   {::tk/name        :eat\n    ::tk/transitions [{::tk/to :choice-handle\n                       ::tk/on \&quot;\&quot;}]}\n   {::tk/name        :travel\n    ::tk/stay        {::tk/guards  []\n                      ::tk/actions [(fn [_] (println \&quot;we stayed!\&quot;))]}\n\n    ::tk/leave       {::tk/guards  [(fn [_] true)]\n                      ::tk/actions [(fn [_] (println \&quot;nope !\&quot;))]}\n\n    ::tk/transitions [{::tk/to :choice-handle\n                       ::tk/on \&quot;\&quot;}]}\n\n   {::tk/name        :play\n    ::tk/transitions [{::tk/to :choice-handle\n                       ::tk/on \&quot;\&quot;}]}\n   {::tk/name        :test\n    ::tk/transitions [::tk/to :choice-handle\n                      ::tk/on \&quot;\&quot;]}])&quot;, :offset 1663, :ns &quot;fsm.state&quot;} {:command &quot;(def test-me\n  [{::tk/name        :choice-handle\n    ::tk/transitions [{::tk/to      :sleep\n                       ::tk/on      \&quot;\&quot;\n                       ::tk/actions []}\n                      {::tk/to :eat\n                       ::tk/on \&quot;\&quot;}\n                      {::tk/to :test\n                       ::tk/on \&quot;t\&quot;}\n                      {::tk/to :play\n                       ::tk/on \&quot;\&quot;}]}\n   {::tk/name        :sleep\n    ::tk/transitions [{::tk/to      :choice-handle\n                       ::tk/on      \&quot;\&quot;\n                       ::tk/actions []}]\n    ::tk/enter       {::tk/guards  [(fn [ctx] (if (get-in ctx [::tk/process :stats :tired?])\n                                                true\n                                                false))]\n                      ::tk/actions [(fn [m] (println \&quot;zzzzzzzzzzzzz\&quot;)\n                                      (lie-down m))]}\n    ::tk/leave       {::tk/actions [(fn [m] (println \&quot;waking up!\&quot;)\n                                      (wake-up m))]}}\n   {::tk/name        :eat\n    ::tk/transitions [{::tk/to :choice-handle\n                       ::tk/on \&quot;\&quot;}]}\n   {::tk/name        :travel\n    ::tk/stay        {::tk/guards  []\n                      ::tk/actions [(fn [_] (println \&quot;we stayed!\&quot;))]}\n\n    ::tk/leave       {::tk/guards  [(fn [_] true)]\n                      ::tk/actions [(fn [_] (println \&quot;nope !\&quot;))]}\n\n    ::tk/transitions [{::tk/to :choice-handle\n                       ::tk/on \&quot;\&quot;}]}\n\n   {::tk/name        :play\n    ::tk/transitions [{::tk/to :choice-handle\n                       ::tk/on \&quot;\&quot;}]}\n   {::tk/name        :test\n    ::tk/transitions [{::tk/to :choice-handle\n                       ::tk/on \&quot;\&quot;}]}])&quot;, :offset 1666, :ns &quot;fsm.state&quot;} {:command &quot;(-&gt; ini-state\n    (tk/apply-signal \&quot;t\&quot;)\n    )&quot;, :offset 44, :ns &quot;fsm.state&quot;} {:command &quot;(-&gt; ini-state\n    (tk/apply-signal \&quot;t\&quot;)\n    (tk/apply-signal \&quot;  \&quot;))&quot;, :offset 64, :ns &quot;fsm.state&quot;} {:command &quot;(-&gt; ini-state\n    (tk/apply-signal \&quot;t\&quot;)\n    (tk/apply-signal \&quot;\&quot;))&quot;, :offset 62} {:command &quot;(def states\n  [{::tk/states [{::tk/name        :choice-handle\n                  ::tk/transitions [{::tk/on _\n                                     ::tk/to :travel}\n                                    {::tk/on _\n                                     ::tk/to :sleep}\n                                    {::tk/on _\n                                     ::tk/to :eat}]}\n                 {::tk/name        :travel\n                  ::tk/transitions [{::tk/on _\n                                     ::tk/to :choice-handle}]}\n                 {::tk/name        :sleep\n                  ::tk/transitions [{::tk/on _\n                                     ::tk/to :choice-handle}]}\n                 {::tk/name        :eat\n                  ::tk/transitions [{::tk/on _\n                                     ::tk/to :choice-handle}]}]}])&quot;, :offset 821, :ns &quot;fsm.behavior&quot;} {:command &quot;(def states\n  [{::tk/name        :choice-handle\n    ::tk/transitions [{::tk/on _\n                       ::tk/to :travel}\n                      {::tk/on _\n                       ::tk/to :sleep}\n                      {::tk/on _\n                       ::tk/to :eat}]}\n   {::tk/name        :travel\n    ::tk/transitions [{::tk/on _\n                       ::tk/to :choice-handle}]}\n   {::tk/name        :sleep\n    ::tk/transitions [{::tk/on _\n                       ::tk/to :choice-handle}]}\n   {::tk/name        :eat\n    ::tk/transitions [{::tk/on _\n                       ::tk/to :choice-handle}]}])&quot;, :offset 595, :ns &quot;fsm.behavior&quot;} {:command &quot;(tk/apply-signal ini-state \&quot;\&quot;)&quot;, :offset 28, :ns &quot;fsm.behavior&quot;} {:command &quot;(-&gt; ini-state\n    (tk/apply-signal \&quot;\&quot;)\n    (tk/apply-signal \&quot;\&quot;))&quot;, :offset 63, :ns &quot;fsm.behavior&quot;} {:command &quot;(-&gt; maps/horse\n    :fsm)&quot;, :offset 23, :ns &quot;world-sim.simulate&quot;} {:command &quot;(tilakone.core/apply-signal (-&gt; maps/horse\n                                :fsm) \&quot;\&quot;)&quot;, :offset 82, :ns &quot;world-sim.simulate&quot;} {:command &quot;(-&gt; maps/world\n    :living-entities\n    :animal\n    :pool\n    deref)&quot;, :offset 67, :ns &quot;world-sim.simulate&quot;} {:command &quot;(-&gt; maps/world\n    :living-entities\n    :animal\n    :pool\n    :horse\n    :pool\n    deref)&quot;, :offset 88, :ns &quot;world-sim.simulate&quot;} {:command &quot;(def tester {:name \&quot;peter\&quot; :age 3})&quot;, :offset 33, :ns &quot;world-sim.simulate&quot;} {:command &quot;(assoc tester :name \&quot;lars\&quot;)&quot;, :offset 25, :ns &quot;world-sim.simulate&quot;} {:command &quot;(run)&quot;, :offset 4, :ns &quot;world-sim.simulate&quot;} {:command &quot;(-&gt; maps/world\n    :living-entities\n    :animal\n    :pool\n    :horse\n    :pool\n    deref\n    first)&quot;, :offset 98, :ns &quot;world-sim.simulate&quot;} {:command &quot;(-&gt; maps/world\n    :living-entities\n    :animal\n    :pool\n    :horse\n    :pool\n    deref\n    )&quot;, :offset 93, :ns &quot;world-sim.simulate&quot;}], :remote []}}</component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager">
    <configuration name="Repl" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false">
      <module name="world_sim" />
      <setting name="replType" value="NREPL" />
      <setting name="execution" value="LEININGEN" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="$PROJECT_DIR$" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false">
      <setting name="replType" value="NREPL" />
      <setting name="execution" value="LEININGEN" />
      <module name="" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="ClojureREPL" factoryName="Remote" activateToolWindowBeforeRun="false">
      <setting name="host" value="" />
      <setting name="port" value="0" />
      <setting name="replType" value="0" />
      <module name="" />
      <method v="2" />
    </configuration>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="e61c451f-b719-46b4-8591-b9f2dc22f69a" name="Default Changelist" comment="" />
      <created>1565115361589</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1565115361589</updated>
      <workItem from="1565115362756" duration="3240000" />
      <workItem from="1565164004215" duration="61000" />
      <workItem from="1565200890257" duration="5367000" />
      <workItem from="1565540060014" duration="2726000" />
      <workItem from="1566202498068" duration="5770000" />
      <workItem from="1566222970365" duration="3387000" />
      <workItem from="1566285344277" duration="674000" />
      <workItem from="1566397717930" duration="1782000" />
      <workItem from="1566554309697" duration="27000" />
      <workItem from="1566568130341" duration="2193000" />
      <workItem from="1566800915092" duration="13000" />
      <workItem from="1566822041098" duration="1663000" />
      <workItem from="1566831926539" duration="1806000" />
      <workItem from="1566885841100" duration="1402000" />
      <workItem from="1566915900897" duration="4441000" />
      <workItem from="1566971910825" duration="619000" />
      <workItem from="1567054792924" duration="2301000" />
      <workItem from="1567058183221" duration="18000" />
      <workItem from="1567080954171" duration="1032000" />
      <workItem from="1567403700743" duration="454000" />
      <workItem from="1567406464515" duration="109000" />
      <workItem from="1567430056273" duration="2313000" />
      <workItem from="1567434005388" duration="5610000" />
      <workItem from="1567699612233" duration="3407000" />
      <workItem from="1567786653040" duration="1920000" />
    </task>
    <task id="LOCAL-00001" summary="first commit ??">
      <created>1565368262944</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1565368262944</updated>
    </task>
    <task id="LOCAL-00002" summary="first commit ??">
      <created>1566092671673</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1566092671673</updated>
    </task>
    <task id="LOCAL-00003" summary="git ignore update">
      <created>1566092727759</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1566092727759</updated>
    </task>
    <task id="LOCAL-00004" summary="started entity behavior.&#10;plan plan calc and path">
      <created>1566252352670</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1566252352670</updated>
    </task>
    <task id="LOCAL-00005" summary="next to nothing">
      <created>1566296551519</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1566296551519</updated>
    </task>
    <option name="localTasksCounter" value="6" />
    <servers />
  </component>
  <component name="TimeTrackingManager">
    <option name="totallyTimeSpent" value="70715000" />
  </component>
  <component name="ToolWindowManager">
    <frame x="-7" y="-7" width="1550" height="838" extended-state="6" />
    <editor active="true" />
    <layout>
      <window_info active="true" content_ui="combo" id="Project" order="0" visible="true" weight="0.15860215" />
      <window_info id="Structure" order="1" side_tool="true" weight="0.25" />
      <window_info id="Designer" order="2" />
      <window_info id="Image Layers" order="3" />
      <window_info id="DB Browser" order="4" weight="0.32997313" />
      <window_info id="Capture Tool" order="5" />
      <window_info id="UI Designer" order="6" />
      <window_info id="Favorites" order="7" side_tool="true" />
      <window_info anchor="bottom" id="Message" order="0" />
      <window_info anchor="bottom" id="Find" order="1" />
      <window_info anchor="bottom" id="Run" order="2" />
      <window_info anchor="bottom" id="Debug" order="3" weight="0.4" />
      <window_info anchor="bottom" id="Cvs" order="4" weight="0.25" />
      <window_info anchor="bottom" id="Inspection" order="5" weight="0.4" />
      <window_info anchor="bottom" id="TODO" order="6" />
      <window_info anchor="bottom" id="DB Execution Console" order="7" />
      <window_info anchor="bottom" id="Terminal" order="8" weight="0.32670453" />
      <window_info anchor="bottom" id="Docker" order="9" show_stripe_button="false" />
      <window_info anchor="bottom" id="Event Log" order="10" side_tool="true" />
      <window_info anchor="bottom" id="Database Changes" order="11" />
      <window_info anchor="bottom" id="Version Control" order="12" weight="0.4659091" />
      <window_info anchor="bottom" id="Messages" order="13" />
      <window_info anchor="right" id="Commander" internal_type="SLIDING" order="0" type="SLIDING" weight="0.4" />
      <window_info anchor="right" id="Ant Build" order="1" weight="0.25" />
      <window_info anchor="right" content_ui="combo" id="Hierarchy" order="2" weight="0.25" />
      <window_info anchor="right" id="Maven" order="3" />
      <window_info anchor="right" id="Palette" order="4" />
      <window_info anchor="right" id="Capture Analysis" order="5" />
      <window_info anchor="right" id="Database" order="6" />
      <window_info anchor="right" id="Palette&#9;" order="7" />
      <window_info anchor="right" id="Theme Preview" order="8" />
      <window_info anchor="right" x="0" y="23" width="1536" height="841" id="REPL" order="9" side_tool="true" visible="true" weight="0.4341398" />
    </layout>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="first commit ??" />
    <MESSAGE value="git ignore update" />
    <MESSAGE value="started entity behavior.&#10;plan plan calc and path" />
    <MESSAGE value="next to nothing" />
    <option name="LAST_COMMIT_MESSAGE" value="next to nothing" />
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/src/world_sim/consumer.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="170">
          <caret line="10" column="19" selection-start-line="10" selection-start-column="19" selection-end-line="10" selection-end-column="19" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/README.md">
      <provider selected="true" editor-type-id="split-provider[text-editor;markdown-preview-editor]">
        <state split_layout="SPLIT">
          <first_editor relative-caret-position="153">
            <caret line="9" column="43" selection-start-line="9" selection-start-column="43" selection-end-line="9" selection-end-column="43" />
          </first_editor>
          <second_editor />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/.hgignore">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/.gitignore">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="51">
          <caret line="3" column="6" selection-start-line="3" selection-start-column="6" selection-end-line="3" selection-end-column="6" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/path_finder/a_star.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="833">
          <caret line="49" column="37" selection-start-line="49" selection-start-column="37" selection-end-line="49" selection-end-column="37" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/clojure/1.9.0/clojure-1.9.0.jar!/clojure/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="226">
          <caret line="498" column="10" selection-start-line="498" selection-start-column="10" selection-end-line="498" selection-end-column="10" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/metosin/tilakone.core/0.0.4/tilakone.core-0.0.4.jar!/tilakone/util.cljc">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1632">
          <caret line="96" column="31" selection-start-line="96" selection-start-column="31" selection-end-line="96" selection-end-column="31" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="136">
          <caret line="8" column="43" selection-start-line="8" selection-start-column="43" selection-end-line="8" selection-end-column="43" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/fsm/state.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1377">
          <caret line="81" column="28" selection-start-line="81" selection-start-column="28" selection-end-line="81" selection-end-column="28" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/fsm/utils.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1683">
          <caret line="99" selection-start-line="99" selection-end-line="99" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/fsm/fsm.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="306">
          <caret line="18" column="26" selection-start-line="18" selection-start-column="26" selection-end-line="18" selection-end-column="26" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/ui/screen.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="272">
          <caret line="16" column="15" selection-start-line="16" selection-start-column="15" selection-end-line="16" selection-end-column="15" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/path_finder/tools.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="408">
          <caret line="24" column="21" selection-start-line="24" selection-start-column="21" selection-end-line="24" selection-end-column="21" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/world_sim/init.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="510">
          <caret line="30" column="58" selection-start-line="30" selection-start-column="58" selection-end-line="30" selection-end-column="58" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/world_sim/actions.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="357">
          <caret line="28" lean-forward="true" selection-start-line="28" selection-end-line="36" selection-end-column="36" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/world_sim/actions_walkers.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="119">
          <caret line="7" column="47" selection-start-line="7" selection-start-column="47" selection-end-line="7" selection-end-column="47" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/world_sim/producer.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-32">
          <caret line="10" column="42" lean-forward="true" selection-start-line="10" selection-start-column="42" selection-end-line="10" selection-end-column="42" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/world_sim/events_walkers.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="221">
          <caret line="13" column="9" lean-forward="true" selection-start-line="13" selection-start-column="9" selection-end-line="13" selection-end-column="9" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/world_sim/events.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="136">
          <caret line="8" column="5" lean-forward="true" selection-start-line="8" selection-start-column="5" selection-end-line="8" selection-end-column="5" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/world_sim/simulate.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="323">
          <caret line="22" column="29" lean-forward="true" selection-start-line="22" selection-start-column="29" selection-end-line="22" selection-end-column="29" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/world_sim/mock_maps.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="325">
          <caret line="109" column="62" lean-forward="true" selection-start-line="109" selection-start-column="62" selection-end-line="109" selection-end-column="62" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/world_sim/tools.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="226">
          <caret line="28" column="77" selection-start-line="28" selection-start-column="77" selection-end-line="28" selection-end-column="77" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/fsm/behavior.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="102">
          <caret line="6" column="32" selection-start-line="6" selection-start-column="32" selection-end-line="6" selection-end-column="32" />
        </state>
      </provider>
    </entry>
  </component>
  <component name="masterDetails">
    <states>
      <state key="ProjectJDKs.UI">
        <settings>
          <last-edited>1.8.0_201</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
    </states>
  </component>
</project>